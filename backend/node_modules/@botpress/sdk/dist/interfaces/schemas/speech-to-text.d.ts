export declare const OpenAITranscribeAudioOutputSchema: import("@bpinternal/zui").ZodObject<{
    language: import("@bpinternal/zui").ZodString;
    duration: import("@bpinternal/zui").ZodNumber;
    segments: import("@bpinternal/zui").ZodArray<import("@bpinternal/zui").ZodObject<{
        text: import("@bpinternal/zui").ZodString;
        id: import("@bpinternal/zui").ZodNumber;
        seek: import("@bpinternal/zui").ZodNumber;
        start: import("@bpinternal/zui").ZodNumber;
        end: import("@bpinternal/zui").ZodNumber;
        tokens: import("@bpinternal/zui").ZodArray<import("@bpinternal/zui").ZodNumber, "many">;
        temperature: import("@bpinternal/zui").ZodNumber;
        avg_logprob: import("@bpinternal/zui").ZodNumber;
        compression_ratio: import("@bpinternal/zui").ZodNumber;
        no_speech_prob: import("@bpinternal/zui").ZodNumber;
    }, "strip", import("@bpinternal/zui").ZodTypeAny, {
        text: string;
        id: number;
        temperature: number;
        seek: number;
        start: number;
        end: number;
        tokens: number[];
        avg_logprob: number;
        compression_ratio: number;
        no_speech_prob: number;
    }, {
        text: string;
        id: number;
        temperature: number;
        seek: number;
        start: number;
        end: number;
        tokens: number[];
        avg_logprob: number;
        compression_ratio: number;
        no_speech_prob: number;
    }>, "many">;
}, "strip", import("@bpinternal/zui").ZodTypeAny, {
    language: string;
    duration: number;
    segments: {
        text: string;
        id: number;
        temperature: number;
        seek: number;
        start: number;
        end: number;
        tokens: number[];
        avg_logprob: number;
        compression_ratio: number;
        no_speech_prob: number;
    }[];
}, {
    language: string;
    duration: number;
    segments: {
        text: string;
        id: number;
        temperature: number;
        seek: number;
        start: number;
        end: number;
        tokens: number[];
        avg_logprob: number;
        compression_ratio: number;
        no_speech_prob: number;
    }[];
}>;
